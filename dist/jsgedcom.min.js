(function(GLOBAL){"use strict";var gedcom={};function _parse(content){var lines=content.trim().split(/\r?\n/);var records=[];var current=null;var sub,chi;var ignored=[];var re_link=new RegExp("^@([^@].*)@$");if(lines[0].split(/\s+/)[1]!=="HEAD"){return null}lines.forEach(function(line,index){var lineArr=line.trim().split(/\s+/);var level=Number(lineArr[0]);var tag=lineArr[1]||"";var prop=lineArr.slice(2).join(" ");var id=tag.match(re_link);var link=prop.match(re_link);var rec;if(!current&&!id){return}if(id){sub=null;chi=null;current={type:prop,id:id[1]};records.push(current);return}if(link){link=link[1]}if(level===1){if(!current[tag]){chi={value:link||prop};sub=[chi];current[tag]=sub}else{chi={value:link||prop};sub.push(chi)}}else if(level===2){if(!chi[tag]){chi[tag]=[]}chi[tag].push(link||prop)}else if(level===0&&tag==="TRLR"){return}else{ignored.push({line:index,content:line,record:current});console.log("Unhandled structure at line "+index)}});return{records:records,ignored:ignored}}gedcom.parse=function(file,done){var result;if(typeof file==="string"){try{result=_parse(file)}catch(err){done(null,err);return null}done(result.records,result.ignored);return result.records}else{if(!GLOBAL.FileReader){throw new Error("Brower does not support HTTP5 FileReader.")}}var reader=new FileReader;reader.onload=function(evt){try{result=_parse(evt.target.result)}catch(err){done(null,err)}done(result.records,result.ignored)};reader.onerror=function(){done(null)};reader.onabort=function(){done(null)};reader.readAsText(file)};var geocache={};gedcom.georeference=function(s,done){if(!geocache.hasOwnProperty(s)){geocache[s]={name:s,longitude:0,latitude:0}}done(geocache[s])};gedcom.tree=function(records){};function normalizeName(person){var names=person.NAME;person.name=null;delete person.NAME;if(!names||!names.length){return"No names present"}name=names[0];names.forEach(function(name){if(person.name){return}var obj={},arr;obj.first="UNKNOWN";obj.middle=[];if(name.SURN&&name.SURN[0]){obj.last=name.SURN[0]}else{obj.last=name.value.match(/\/(.*)\//);if(obj.last){obj.last=obj.last[1]}}if(name.GIVN&&name.GIVN[0]){arr=name.GIVN[0].split(/\s+/);if(arr[0]){obj.first=arr[0]}obj.middle=arr.slice(1).join(" ")}person.name=obj})}function normalizeDate(d){return new Date(d)}function normalizeDates(dates){var out={alt:[],date:new Date(NaN),str:"UNKNOWN"};var n=0;dates.forEach(function(d){out.alt.push(d);if(n<d.length){n=d.length;out.date=normalizeDate(d);out.str=d;if(!d.valueOf()){n=0}}});return out.date}function normalizeDatePlace(source){var target={date:null,place:null};(source||[]).forEach(function(b){target.date=normalizeDates(b.DATE||[]);normalizePlaces(b.PLAC||[],function(p){target.place=p})});if(target.date||target.place){return target}return null}function normalizeBirth(person){person.born=normalizeDatePlace(person.BIRT);delete person.BIRT}function normalizeRes(person){var res=(person.RESI||[]).map(function(r){return normalizeDatePlace([r])});Array.prototype.push.apply(res,(person.CENS||[]).map(function(r){return normalizeDatePlace([r])}));delete person.RESI;delete person.CENS;person.res=res}function normalizeDeath(person){if(person.DEAT&&person.DEAT[0]&&person.DEAT[0].value.toUpperCase()[0]==="Y"){person.died=true}else{person.died=normalizeDatePlace(person.DEAT)}delete person.DEAT}function normalizeBuried(person){person.buried=normalizeDatePlace(person.BURI);delete person.BURI}function normalizePlace(place,done){gedcom.georeference(place,done)}function normalizePlaces(places,done){if(places&&places[0]){gedcom.georeference(places[0],done)}else{done(null)}}function normalizeSex(person){var s;if(person.SEX&&person.SEX[0]&&typeof person.SEX[0].value==="string"){s=person.SEX[0].value;if(s.toUpperCase()==="M"){person.sex="M"}else if(s.toUpperCase()==="F"){person.sex="F"}else{person.sex="O"}}else{person.sex=null}delete person.SEX}function normalizePerson(person){delete person.CHAN;delete person._UID;delete person.type;normalizeSex(person);normalizeName(person);normalizeBirth(person);normalizeRes(person);normalizeDeath(person);normalizeBuried(person)}function normalizeFamily(family){family.children=[];family.parents=[];["HUSB","WIFE","CHIL"].forEach(function(type){var arr=family.parents;if(type==="CHIL"){arr=family.children}if(family[type]&&family[type].length){family[type].forEach(function(p){arr.push(p.value)})}delete family[type]});family.marriage=normalizeDatePlace(family.MARR);delete family.MARR;family.license=normalizeDatePlace(family.MARL);delete family.MARL}gedcom.normalize=function(records){var out={people:[],families:[],ignored:[]};records.forEach(function(record){if(typeof record.type!=="string"){out.ignored.push(record)}else if(record.type.toUpperCase()==="INDI"){out.people.push(record);normalizePerson(record)}else if(record.type.toUpperCase()==="FAM"){out.families.push(record);normalizeFamily(record)}});return out};GLOBAL.gedcom=gedcom})(window);